---
- hosts: all
  become: yes
  user: ubuntu
  tasks:

    - name: Allow ubuntu user to sudo on target node
      ansible.builtin.copy: 
        content: |
          #Allow ubuntu to sudo
          ubuntu  ALL=(ALL) NOPASSWD: ALL
        dest: /etc/sudoers.d/sudoers
        validate: 'visudo -cf %s'
        mode: 0440
 
    - name: configure network settings
      ansible.builtin.copy:
        content: |
          # This is the network config written by 'subiquity'
          network:
            ethernets:
              enp2s0:
                dhcp4: true
                dhcp6: false
              enp3s0:
                dhcp4: true
                optional: true
            version: 2
        dest: /etc/netplan/00-installer-config.yaml
      notify: netplan apply

    - name: Set Timezone on nodes
      ansible.builtin.file:
        src: /usr/share/zoneinfo/America/New_York
        dest: /etc/localtime
        owner: root
        group: root
        state: link

    - name: set fs.inotify.max_user_watches
      ansible.posix.sysctl:
        name: fs.inotify.max_user_watches
        value: '65536'

    - name: Copy 20auto-upgrades unattended-upgrades config
      ansible.builtin.copy:
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        mode: 0644
        content: |
          APT::Periodic::Update-Package-Lists "1";
          APT::Periodic::Download-Upgradeable-Packages "1";
          APT::Periodic::AutocleanInterval "7";
          APT::Periodic::Unattended-Upgrade "1";
      notify: Restart unattended-upgrades service

    - name: Copy 50unattended-upgrades unattended-upgrades config
      ansible.builtin.copy:
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        mode: 0644
        content: |
          Unattended-Upgrade::Automatic-Reboot "false";
          Unattended-Upgrade::Remove-Unused-Dependencies "true";
          Unattended-Upgrade::DevRelease "false";
          Unattended-Upgrade::Allowed-Origins {
              "${distro_id}:${distro_codename}";
              "${distro_id}:${distro_codename}-security";
              "${distro_id}:${distro_codename}-updates";
              "${distro_id}ESMApps:${distro_codename}-apps-security";
              "${distro_id}ESM:${distro_codename}-infra-security";
          }
      notify: Restart unattended-upgrades service

    - name: install packages
      ansible.builtin.package:
        name:
          - nfs-common

    - name: Start unattended-upgrades service
      ansible.builtin.systemd:
        name: unattended-upgrades
        enabled: true
        state: started


  handlers:
    - name: netplan apply
      shell: netplan apply

    - name: Restart unattended-upgrades service
      ansible.builtin.service:
        name: unattended-upgrades.service
        daemon_reload: true
        enabled: true
        state: restarted

- hosts: odroid-01
  become: yes
  user: ubuntu
  tasks:

    - name: Install packages
      ansible.builtin.package:
        name: 
          - jq
        state: present

    - name: Ensure group 'dashboard' exists
      ansible.builtin.group:
        name: dashboard
        state: present

    - name: Add the user 'dashboard'
      ansible.builtin.user:
        name: dashboard
        group: dashboard
        shell: /bin/bash

    - name: download k1s dashboard script
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/weibeld/k1s/master/k1s"
        dest: /usr/local/bin/k1s
        owner: root
        group: dashboard
        mode: '0554'

    - name: Create a kube directory
      ansible.builtin.file:
        path: /home/dashboard/.kube
        state: directory
        owner: dashboard
        group: dashboard
        mode: '0755'

    - name: copy kubeconfig to dashboard user
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/dashboard/.kube/config
        remote_src: yes
        owner: dashboard
        group: dashboard
        mode: 0644

    - name: add kubeconfig env var to dashboard profile
      ansible.builtin.lineinfile:
        path: /home/dashboard/.bashrc
        regexp: '^export KUBECONFIG='
        line: 'export KUBECONFIG=~/.kube/config'