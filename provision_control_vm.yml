---
- hosts: all
  become: yes
  user: vagrant
  vars:
   - k8s_current_version: "v1.23.6"
   - sops_version: "3.7.1"
   - helm_version: "v3.6.3"
   - velero_version: "1.6.3"
   - terraform_version: "1.1.6"
   - krew_version: "0.4.3"
   - krew_plugins:
       - rook-ceph
  tasks:

    - name: download kubectl
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ k8s_current_version }}/bin/linux/amd64/kubectl"
        dest: "/home/vagrant/kubectl"
        owner: root
        group: root
        mode: '0444'
        force: yes

    - name: get checksum of downloaded kubectl
      ansible.builtin.stat:
        path : "/home/vagrant/kubectl"
      register: downloaded_kubectl

    - name: set downloaded kubectl hash
      ansible.builtin.set_fact:
        downloaded_kubectl_sha1: "{{ downloaded_kubectl.stat.checksum }}"
    
    - name: get checksum of installed kubectl
      ansible.builtin.stat:
        path : "/usr/local/bin/kubectl"
      register: installed_kubectl
    
    - name: set installed kubectl hash
      ansible.builtin.set_fact:
        installed_kubectl_sha1: "{{ installed_kubectl.stat.checksum }}"
      when: installed_kubectl.stat.exists

    - name: install kubectl 
      ansible.builtin.shell: install -o root -g root -m 0755 /home/vagrant/kubectl /usr/local/bin/kubectl
      when: downloaded_kubectl_sha1 != installed_kubectl_sha1|default(False)

    - name: install k3sup 
      ansible.builtin.shell: 
        cmd: curl -sLS https://get.k3sup.dev | sh
        creates: /usr/local/bin/k3sup

    - name: install flux 
      ansible.builtin.shell: 
        cmd: curl -s https://fluxcd.io/install.sh | bash
        creates: /usr/local/bin/flux

    - name: update /etc/hosts file
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          192.168.1.200 odroid-01
          192.168.1.201 odroid-02
          192.168.1.202 odroid-03
    
    - name: setup ssh config
      ansible.builtin.copy:
        content: |
          Host odroid-01
            HostName 192.168.1.200
            User ubuntu
            IdentityFile ~/.ssh/id_rsa
            IdentitiesOnly yes
          
          Host odroid-02
            HostName 192.168.1.201
            User ubuntu
            IdentityFile ~/.ssh/id_rsa
            IdentitiesOnly yes

          Host odroid-03
            HostName 192.168.1.202
            User ubuntu
            IdentityFile ~/.ssh/id_rsa
            IdentitiesOnly yes
        dest: /home/vagrant/.ssh/config

    - name: download SOPS
      ansible.builtin.get_url:
        url: https://github.com/mozilla/sops/releases/download/v{{ sops_version }}/sops_{{ sops_version }}_amd64.deb
        dest: /home/vagrant/sops_{{ sops_version }}_amd64.deb

    - name: Install a SOPS
      apt:
        deb: /home/vagrant/sops_{{ sops_version }}_amd64.deb
    
    - name: Install packages
      ansible.builtin.package:
        name: 
          - pinentry-gtk2
          - direnv
          - jq
        state: present

    - name: add direnv to bash profile
      ansible.builtin.lineinfile:
        path: /home/vagrant/.bashrc
        regexp: '^eval "$(direnv hook bash)"'
        line: eval "$(direnv hook bash)"

    - name: Install pre-commit
      ansible.builtin.pip:
        name: pre-commit

    - name: Install docker python module
      ansible.builtin.pip:
        name: docker

    - name: Download kustomize
      ansible.builtin.get_url: 
        url: https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh
        dest: /home/vagrant/install_kustomize.sh
  
    - name: Execute the kustomize installer
      ansible.builtin.shell: 
        cmd: cd /usr/local/bin/;bash /home/vagrant/install_kustomize.sh
        creates: /usr/local/bin/kustomize

    - name: download helm
      ansible.builtin.get_url:
        url: https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
        dest: /home/vagrant/helm-{{ helm_version }}-linux-amd64.tar.gz

    - name: Extract helm
      ansible.builtin.unarchive:
        src: /home/vagrant/helm-{{ helm_version }}-linux-amd64.tar.gz
        dest: /home/vagrant/

    - name: install helm binary
      ansible.builtin.copy:
        src: /home/vagrant/linux-amd64/helm
        dest: /usr/local/bin/helm
        owner: root
        group: root
        mode: 0755

    - name: download minio command utility
      ansible.builtin.get_url:
        url: https://dl.min.io/client/mc/release/linux-amd64/mc
        dest: /usr/local/bin/mc
        owner: root
        group: root
        mode: 0755

    - name: download velero cli
      ansible.builtin.get_url:
        url: https://github.com/vmware-tanzu/velero/releases/download/v{{ velero_version }}/velero-v{{ velero_version }}-linux-amd64.tar.gz
        dest: /home/vagrant/velero-v{{ velero_version }}-linux-amd64.tar.gz
      
    - name: Extract velero
      ansible.builtin.unarchive:
        src: /home/vagrant/velero-v{{ velero_version }}-linux-amd64.tar.gz
        dest: /home/vagrant/

    - name: install helm binary
      ansible.builtin.copy:
        src: /home/vagrant/velero-v{{ velero_version }}-linux-amd64/velero
        dest: /usr/local/bin/velero
        owner: root
        group: root
        mode: 0755

    - name: Add apt signing key for hashicorp
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Add specified repository into sources list
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://apt.releases.hashicorp.com focal main
        state: present

    - name: Install packages
      ansible.builtin.package:
        name: terraform={{ terraform_version }}
        state: present

    - name: Fetch krew
      get_url:
        url: "https://github.com/kubernetes-sigs/krew/releases/download/v{{ krew_version }}/krew-linux_amd64.tar.gz"
        dest: /home/vagrant/krew.tar.gz
    
    - name: Make tempdir
      file:
        path: /home/vagrant/krew_tmp
        state: directory
    
    - name: Unarchive krew
      unarchive:
        src: /home/vagrant/krew.tar.gz
        dest: /home/vagrant/krew_tmp
        remote_src: true
    
    - name: Set fact Amd64 fact on x86_64 platforms
      set_fact:
        linux_platform: amd64
      when: ansible_architecture == "x86_64"
    
    - name: Set fact Arm fact on Arm platforms
      set_fact:
        linux_platform: arm
      when: ansible_architecture == "arm"
    
    - name: Copy krew plugin to /usr/local/bin
      copy:
        src: "/home/vagrant/krew_tmp/krew-{{ ansible_system|lower }}_{{ linux_platform }}"
        dest: /usr/local/bin/kubectl-krew
        mode: 0755
        remote_src: true
    
    - name: Run Krew Update
      shell: /usr/local/bin/kubectl krew update
      become: no
      args:
        creates: /root/.krew/index/plugins/krew_plugins.yaml

    - name: Install krew plugins
      shell: "kubectl krew install {{ item }}"
      become: no
      with_items: "{{ krew_plugins }}"
      when: krew_plugins is defined

    - name: check if homebrew is installed
      stat:
        path: /home/linuxbrew/.linuxbrew/bin/brew
      register: homebrew_check


    - name: install homebrew
      shell: NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      become: no
      when: homebrew_check.stat.exists == False

    - name: install k9s dashboard
      homebrew:
        name: derailed/k9s/k9s
        path: /home/linuxbrew/.linuxbrew/bin
        state: present
      become: no